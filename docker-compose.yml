version: '3.8'

services:
  # RoomService - uses PostgreSQL
  room-service:
    build:
      context: ./RoomService
    container_name: room-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://room-db:5432/roomdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=yourpassword
    depends_on:
      - room-db

  room-db:
    image: postgres:latest
    container_name: room-db
    environment:
      POSTGRES_DB: roomdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"
    volumes:
      - roomdb-data:/var/lib/postgresql/data

  # BookingService - uses MongoDB
  booking-service:
    build:
      context: ./BookingService
    container_name: booking-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://booking-db:27017/bookingdb
    depends_on:
      - booking-db

  booking-db:
    image: mongo:latest
    container_name: booking-db
    ports:
      - "27017:27017"
    volumes:
      - bookingdb-data:/data/db

  # UserService - uses PostgreSQL
  user-service:
    build:
      context: ./UserService
    container_name: user-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/userdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=yourpassword
    depends_on:
      - user-db

  user-db:
    image: postgres:latest
    container_name: user-db
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5433:5432"
    volumes:
      - userdb-data:/var/lib/postgresql/data

  # EventService - uses MongoDB
  event-service:
    build:
      context: ./EventService
    container_name: event-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://event-db:27018/eventdb
    depends_on:
      - event-db

  event-db:
    image: mongo:latest
    container_name: event-db
    ports:
      - "27018:27017"
    volumes:
      - eventdb-data:/data/db

  # ApprovalService - uses MongoDB (can use PostgreSQL as well if needed)
  approval-service:
    build:
      context: ./ApprovalService
    container_name: approval-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://approval-db:27019/approvaldb
    depends_on:
      - approval-db

  approval-db:
    image: mongo:latest
    container_name: approval-db
    ports:
      - "27019:27017"
    volumes:
      - approvaldb-data:/data/db

volumes:
  roomdb-data:
  bookingdb-data:
  userdb-data:
  eventdb-data:
  approvaldb-data:
